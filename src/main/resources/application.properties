keycloak.realm = party-crm
keycloak.auth-server-url =
keycloak.ssl-required = none
keycloak.resource = amazon-crm-party
keycloak.bearer-only = true
keycloak.cors = true

keycloak.credentials.secret = 11111111-1111-1111-1111-111111111111
keycloak.securityConstraints[0].securityCollections[0].name = spring secured api
keycloak.securityConstraints[0].securityCollections[0].authRoles[0] = USERS
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /api/amazon-crm-party-secured

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://postgresql.amazon-crm.svc:5432/amazondb
spring.datasource.username= amazon
spring.datasource.password=amazon

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create-drop
